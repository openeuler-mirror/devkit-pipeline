<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java, properties, xml"/>
    <module name="TreeWalker">
        <module name="AnnotationLocation">
            <property name="id" value="allow_anocation"/>
            <property name="allowSamelineSingleParameterlessAnnotation"
                      value="false"/>
            <property name="allowSamelineParameterizedAnnotation" value="false"/>
            <property name="allowSamelineMultipleAnnotations" value="false"/>
            <property name="severity" value="error"/>
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF,
                      RECORD_DEF, COMPACT_CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module name="SuppressWarnings">
            <property name="severity" value="warning"/>
            <property name="format" value="^unchecked$"/>
            <property name="tokens"
                      value="CLASS_DEF,INTERFACE_DEF,ENUM_DEF,ANNOTATION_DEF,ANNOTATION_FIELD_DEF,ENUM_CONSTANT_DEF,
                      METHOD_DEF,CTOR_DEF"/>
        </module>
        <!-- 避免内嵌块 -->
        <module name="AvoidNestedBlocks">
            <property name="severity" value="error"/>
            <property name="allowInSwitchCase" value="false"/>
        </module>
        <!-- 避免空块 -->
        <!-- 3.7 不要通过一个空的块忽略异常 -->
        <module name="EmptyBlock">
            <property name="severity" value="error"/>
            <property name="option" value="statement"/>
            <property name="tokens"
                      value="LITERAL_WHILE, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_DO, LITERAL_IF,
                       LITERAL_ELSE, LITERAL_FOR , INSTANCE_INIT, STATIC_INIT,
                       LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_CASE, LITERAL_DEFAULT"/>
        </module>
        <!--  -->
        <module name="LeftCurly">
            <property name="severity" value="error"/>
            <property name="ignoreEnums" value="false"/>
            <property name="option" value="eol"/>
            <property name="tokens"
                      value="ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF,
                    INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT,
                    LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF,
                    LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF,
                    OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlySame"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,
                    LITERAL_DO"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens"
                      value="LITERAL_TRY, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,
                            INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF,
                            COMPACT_CTOR_DEF, LITERAL_SWITCH, LITERAL_CASE"/>
        </module>

        <module name="NeedBraces">
            <property name="severity" value="error"/>
        </module>

        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount">
            <property name="severity" value="error"/>
            <property name="max" value="5"/>
            <property name="ignorePrivateMethods" value="false"/>
        </module>
        <module name="VisibilityModifier">
            <property name="severity" value="warning"/>
            <property name="allowPublicFinalFields" value="true"/>
            <property name="protectedAllowed" value="true"/>
        </module>
        <module name="ConstructorsDeclarationGrouping">
            <property name="severity" value="warning"/>
        </module>
        <module name="CovariantEquals">
            <property name="severity" value="warning"/>
        </module>
        <module name="DeclarationOrder">
            <property name="severity" value="warning"/>
        </module>
        <module name="DefaultComesLast">
            <property name="severity" value="warning"/>
        </module>
        <module name="EmptyStatement">
            <property name="severity" value="warning"/>
        </module>
        <module name="EqualsAvoidNull">
            <property name="severity" value="warning"/>
        </module>
        <module name="EqualsAvoidNull">
            <property name="severity" value="warning"/>
        </module>
        <module name="EqualsHashCode">
            <property name="severity" value="warning"/>
        </module>
        <module name="FallThrough">
            <property name="severity" value="error"/>
            <property name="checkLastCaseGroup" value="true"/>
        </module>
        <module name="HiddenField">
            <property name="severity" value="warning"/>
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="setterCanReturnItsClass" value="true"/>
        </module>
        <module name="IllegalCatch">
            <property name="severity" value="warning"/>
            <property name="illegalClassNames"
                      value="Error, Exception, RuntimeException, Throwable, java.lang.Error, java.lang.Exception,
                       java.lang.RuntimeException, java.lang.Throwable,NullPointerException,IndexOutOfBoundsException"/>
        </module>
        <module name="IllegalInstantiation">
            <property name="severity" value="warning"/>
            <property name="classes" value="java.lang.Boolean,java.lang.Integer"/>
        </module>
        <module name="IllegalThrows">
            <property name="severity" value="warning"/>
            <property name="illegalClassNames" value="NullPointerException"/>
        </module>
        <module name="InnerAssignment">
            <property name="severity" value="warning"/>
        </module>
        <module name="MagicNumber">
            <property name="severity" value="warning"/>
        </module>
        <module name="MissingSwitchDefault">
            <property name="severity" value="error"/>
        </module>
        <module name="ModifiedControlVariable">
            <property name="severity" value="warning"/>
            <property name="skipEnhancedForLoopVariable" value="true"/>
        </module>
        <module name="MultipleStringLiterals">
            <property name="severity" value="warning"/>
            <property name="allowedDuplicates" value="2"/>
        </module>
        <module name="MultipleVariableDeclarations">
            <property name="severity" value="error"/>
        </module>
        <module name="NestedForDepth">
            <property name="severity" value="error"/>
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="severity" value="error"/>
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="severity" value="error"/>
            <property name="max" value="3"/>
        </module>
        <module name="NoClone">
            <property name="severity" value="error"/>
        </module>
        <module name="NoFinalizer">
            <property name="severity" value="error"/>
        </module>
        <module name="OneStatementPerLine">
            <property name="severity" value="warning"/>
            <property name="treatTryResourcesAsStatement" value="true"/>
        </module>
        <module name="OverloadMethodsDeclarationOrder">
            <property name="severity" value="warning"/>
        </module>
        <module name="ParameterAssignment">
            <property name="severity" value="warning"/>
        </module>
        <module name="SimplifyBooleanExpression">
            <property name="severity" value="warning"/>
        </module>
        <module name="SimplifyBooleanReturn">
            <property name="severity" value="warning"/>
        </module>
        <module name="StringLiteralEquality">
            <property name="severity" value="warning"/>
        </module>
        <module name="SuperClone">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnnecessarySemicolonInTryWithResources">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnusedLocalVariable">
            <property name="severity" value="error"/>
        </module>
        <module name="VariableDeclarationUsageDistance">
            <property name="severity" value="warning"/>
            <property name="allowedDistance" value="3"/>
        </module>
        <!-- 避免引入* -->
        <module name="AvoidStarImport">
            <property name="severity" value="error"/>
        </module>
        <module name="CustomImportOrder">
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="customImportOrderRules"
                      value="STATIC, THIRD_PARTY_PACKAGE, STANDARD_JAVA_PACKAGE"/>
        </module>
        <module name="ImportOrder">
            <property name="groups" value="android,com,net,org,/^java\./,javax"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="top"/>
            <property name="staticGroups" value=""/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
            <property name="separatedStaticGroups" value="true"/>
        </module>
        <module name="RedundantImport">
            <property name="severity" value="error"/>
        </module>
        <module name="UnusedImports">
            <property name="severity" value="error"/>
            <property name="processJavadoc" value="false"/>
        </module>
        <module name="AtclauseOrder">
            <property name="severity" value="error"/>
        </module>
        <module name="InvalidJavadocPosition">
            <property name="severity" value="error"/>
        </module>
        <module name="JavadocBlockTagLocation">
            <property name="severity" value="error"/>
        </module>
        <module name="JavadocContentLocation">
            <property name="severity" value="error"/>
        </module>
        <module name="JavadocMethod">
            <property name="severity" value="error"/>
            <property name="accessModifiers" value="public,protected"/>
            <property name="allowMissingParamTags" value="false"/>
            <property name="allowMissingReturnTag" value="false"/>
        </module>
        <module name="JavadocMissingLeadingAsterisk">
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocMissingWhitespaceAfterAsterisk">
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocParagraph">
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocTagContinuationIndentation">
            <property name="severity" value="warning"/>
        </module>
        <module name="JavadocVariable">
            <property name="severity" value="warning"/>
            <property name="scope" value="protected"/>
            <property name="ignoreNamePattern" value="log|logger"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="severity" value="warning"/>
            <property name="scope" value="protected"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="allowedAnnotations" value="Override,Test,Deprecated"/>
        </module>
        <module name="MissingJavadocType">
            <property name="severity" value="warning"/>
            <property name="scope" value="protected"/>
            <property name="tokens"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                      RECORD_DEF, ANNOTATION_DEF"/>
        </module>
        <module name="NonEmptyAtclauseDescription">
            <property name="severity" value="warning"/>
        </module>
        <module name="RequireEmptyLineBeforeBlockTagGroup">
            <property name="severity" value="warning"/>
        </module>
        <module name="SingleLineJavadoc">
            <property name="severity" value="warning"/>
        </module>
        <module name="WriteTag">
            <property name="severity" value="warning"/>
            <property name="tag" value="@since"/>
        </module>
    </module>

    <module name="RegexpHeader">
        <property name="severity" value="warning"/>
        <property name="fileExtensions" value="java"/>
        <property name="header"
                  value="^/\*$\n^\s\*\sCopyright\s\([Cc]\)\s.*([0-9]{4}-)?[0-9]{4}.*\n^ \*/$\n\n^package\s.*\n\n^import.*"/>
    </module>

</module>

